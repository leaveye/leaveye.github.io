<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Happy Coding - 博客</title><link href="http://leaveye.github.io/" rel="alternate"></link><link href="http://leaveye.github.io/feeds/bo-ke.atom.xml" rel="self"></link><id>http://leaveye.github.io/</id><updated>2015-06-17T13:37:00+08:00</updated><entry><title>迁移Blog</title><link href="http://leaveye.github.io/move-blog.html" rel="alternate"></link><published>2015-06-17T13:37:00+08:00</published><updated>2015-06-17T13:37:00+08:00</updated><author><name>Levi G</name></author><id>tag:leaveye.github.io,2015-06-17:/move-blog.html</id><summary type="html">&lt;p&gt;之前的 blog 放在朋友的主机上，还没写上几个字呢，在换主机的过程中数据就丢失了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;反正没花力气，所以也不用心疼……&lt;br&gt;
—— &lt;a href="/author/levi-g.html"&gt;Levi G.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;选择&lt;/h2&gt;
&lt;p&gt;三天前决定并开始动手，把 blog 放 Github 上面。用了半天的时间，比较过 jekyll 和 pelican 后，还是选择了 pelican 。毕竟 python 在安装上还是要比 Ruby 方便许多的。这对于我这样时不时换工作机的人还是个很大的优势。&lt;/p&gt;
&lt;p&gt;我对 blog 的需求其实还挺烦人的。语法高亮、主题定制是基本的，&lt;span class="math"&gt;\(\LaTeX\)&lt;/span&gt; 是必须的，要是有 graphviz 、序列图的支持就更好了。&lt;/p&gt;
&lt;p&gt;现在的各种工具，语法高亮、主题定制都是必备功能了，产生差异的就只是配套内容的多寡了。粗略看了下 &lt;a href="https://github.com/getpelican/pelican-themes" title="pelican 主题包"&gt;pelican-themes&lt;/a&gt; 虽然没有 &lt;a href="http://jekyllthemes.org" title="Jekyll 主题包"&gt;Jekyll Themes&lt;/a&gt; 看上去那么完整 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;之前的 blog 放在朋友的主机上，还没写上几个字呢，在换主机的过程中数据就丢失了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;反正没花力气，所以也不用心疼……&lt;br&gt;
—— &lt;a href="/author/levi-g.html"&gt;Levi G.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;选择&lt;/h2&gt;
&lt;p&gt;三天前决定并开始动手，把 blog 放 Github 上面。用了半天的时间，比较过 jekyll 和 pelican 后，还是选择了 pelican 。毕竟 python 在安装上还是要比 Ruby 方便许多的。这对于我这样时不时换工作机的人还是个很大的优势。&lt;/p&gt;
&lt;p&gt;我对 blog 的需求其实还挺烦人的。语法高亮、主题定制是基本的，&lt;span class="math"&gt;\(\LaTeX\)&lt;/span&gt; 是必须的，要是有 graphviz 、序列图的支持就更好了。&lt;/p&gt;
&lt;p&gt;现在的各种工具，语法高亮、主题定制都是必备功能了，产生差异的就只是配套内容的多寡了。粗略看了下 &lt;a href="https://github.com/getpelican/pelican-themes" title="pelican 主题包"&gt;pelican-themes&lt;/a&gt; 虽然没有 &lt;a href="http://jekyllthemes.org" title="Jekyll 主题包"&gt;Jekyll Themes&lt;/a&gt; 看上去那么完整，不过基本样子上还是够用了。毕竟这些『小众』平台比起大 Wordpress 还是差远了。&lt;/p&gt;
&lt;h2 id="_2"&gt;安装&lt;/h2&gt;
&lt;p&gt;安装、配置过程其实是非常简单的。即使如此，我也踩了进坑里了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mac OS X 系统自带和 &lt;code&gt;brew install&lt;/code&gt; 的两个版本的 python 冲突问题，删掉或改名系统自带的版本可以解决。这个问题有时表现得像是权限问题。不管怎样，牢记这一条就好：&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;brew&lt;/code&gt; 的东西都是无需 &lt;code&gt;sudo&lt;/code&gt; 的。&lt;br&gt;
—— &lt;a href="/author/levi-g.html"&gt;Levi G.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;眼下 &lt;code&gt;pip&lt;/code&gt; 安装的 pelican 版本是 3.5.0 ，有个 bug 。文章作者的值不能以 &lt;code&gt;.&lt;/code&gt; 字符结尾。因为对于 San Z. 这个作者，生成的作者页面文件命名是 &lt;code&gt;san-z.html&lt;/code&gt;，但是页面中作者链接的 URL 写的却是 &lt;code&gt;san-z..html&lt;/code&gt; 。于是产生坏链了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里是安装过程中参考的资源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://x-wei.github.io/pelican_github_blog.html"&gt;用pelican在github上创建自己的博客!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://martinbrochhaus.com/pelican2.html"&gt;Pelican and Github Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.vcheng.org/2014/02/22/migrating-from-wordpress-to-pelican/"&gt;Migrating from Wordpress to Pelican&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;以及 pelican 的文档：&lt;a href="http://pelican-docs-zh-cn.readthedocs.org/en/latest/"&gt;HOME&lt;/a&gt;，&lt;a href="http://pelican-docs-zh-cn.readthedocs.org/en/latest/faq.html"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;定制&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;革命尚未成功，同志仍需努力。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;目前为止我还没弄完，只有了个大概思路。先找了个主题用着，以后慢慢弄。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;功能&lt;/th&gt;
&lt;th&gt;状态与方向&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;span class="math"&gt;\(\LaTeX\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.mathjax.org/"&gt;MathJax&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;SyntaxHighlight&lt;/td&gt;
&lt;td&gt;主题帮助里有&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://www.graphviz.org/"&gt;graphviz&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;见到过有人开源了编译成 js 的 graphviz ，回头可以考虑试试&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;序列图&lt;/td&gt;
&lt;td&gt;这个没找到好的本地解析，实在不行就得尽量少用，偶尔用 &lt;a href="https://www.websequencediagrams.com"&gt;WebSequenceDiagrams&lt;/a&gt; 顶一下吧。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;p&gt;我用了几乎一整天的时间对比 &lt;a href="https://github.com/getpelican/pelican-themes" title="pelican 主题包"&gt;pelican 的各种主题&lt;/a&gt;。各有各的不满意，这当然是符合预期的。&lt;/p&gt;
&lt;p&gt;很自然的就想瞧瞧定制的话有多难。看到了文档（&lt;a href="http://docs.getpelican.com/en/3.5.0/themes.html#structure"&gt;英文&lt;/a&gt;，&lt;a href="http://pelican-docs-zh-cn.readthedocs.org/en/latest/themes.html#theming-pelican"&gt;中文&lt;/a&gt;）觉得很简单，就想从零开始做个自己的主题了。在这之前，把以前喜欢的 Wordpress 主题 port 过来一个吧。&lt;/p&gt;
&lt;p&gt;翻了好一段时间才找到当时很喜欢的主题 decode ，下载回来尝试了一下『对照翻译』弄了一下。页面主体弄起来还算容易，可惜 sidebar 的部分就被绕晕了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;『这动态效果是怎么实现的？状态保存在哪儿？怎么调整的？』&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;觉得还是不花时间弄这个了。简单选择了一个完成度比较高的现成主题 &lt;a href="https://github.com/getpelican/pelican-themes/tree/master/foundation-default-colours"&gt;foundation-default-colours&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;选这个主题是因为它已经有了正确的排版并且支持了 &lt;span class="math"&gt;\(\LaTeX\)&lt;/span&gt; 。回头一点点弄的时候再换吧。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;【2018/6/18 更新】&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;时隔好久，在家里老电脑的新系统里又配置了一下 pelican 环境。发现主题已经普遍更新了，大家的完成度都上升了一大截。我现在用的是 &lt;a href="https://github.com/getpelican/pelican-themes" title="pelican 主题包"&gt;pelican 主题&lt;/a&gt;中的 &lt;a href="https://github.com/jvanz/pelican-hyde"&gt;hyde&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\LaTeX\)&lt;/span&gt; 已经有 &lt;a href="https://github.com/barrysteyn/pelican_plugin-render_math"&gt;pelican 插件&lt;/a&gt;支持了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;【2018/6/25 更新】&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;主题颜色还是碍眼，换成 &lt;a href="https://github.com/nairobilug/pelican-alchemy"&gt;Alchemy&lt;/a&gt; 吧。&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;待续……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="pelican"></category><category term="server"></category></entry></feed>